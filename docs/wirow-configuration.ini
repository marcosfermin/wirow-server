;; Brocha configuration reference.
;;
;; Any part of configuration may contain placeholders ( {...} )
;; which will be replaced by the following variables:
;;
;;  {home}              Path to user home directory.
;;  {cwd}               Current working directory of wirow process.
;;  {config_file_dir}   Path to directory where configuration file resides.
;;  {program}           Path to wirow executable.
;;


[main]

;;
;; IP address to listen.
;; Also defines a mapping between private and public ip
;; for servers behind NAT of Docker for webrtc protocol.
;;
;;  The following forms are supported:
;;
;;  - auto - server will autodetect IP address to listen.
;;  - <ip> - IP address
;;  - <private ip>@<public ip> - Mapping of <private ip> to <public ip> if server behind NAT.
;;
;; `ip` option is overridden by `-l <ip>[@<pub ip>]` command line option
;;
;; Example:
;;  ip = 0.0.0.0@192.168.1.37

; ip = auto


;;
;; HTTP/HTTPS listen port.
;; If cert_file / cert_key_file / domain_name specified this
;; port will be used for HTTPS traffic.
;; Overridden by `-p <port>` command line option.
;;

; port = 443


;;
;; DNS domain name of server in order to obtain Let's Encrypt TLS certificate.
;; Overridden by `-n <domain>` command line option
;;
;; Example:
;; domain_name = foo.example.com


;;
;; HTTP port used to redirect incoming HTTP request to HTTPS protocol endpoint.
;; Option used to pass ACME challenge during process of generating Let's Encrypt TLS certificates.
;;

; https_redirect_port = 80


;;
;; Data directory with database, screen recordings and uploads.
;;

; data = {cwd}


;;
;; Path to x509 PEM certificate and key file for TLS layer.
;; Example:
;; cert_file = {config_file_dir}/cert.pem
;; cert_key_file = {config_file_dir}/key.pem
;;


;;
;; Extra HTTP headers added to every server response.
;; Example:
;; http_header = 'Access-Control-Allow-Origin' '*'
;; http_header = 'Access-Control-Allow-Methods' 'GET,HEAD,OPTIONS,POST,PUT'
;; http_header = 'Access-Control-Allow-Headers' '*'
;;


;;
;; Max age of sessions cookies in seconds.
;; Default: 2592000 (30 days)
;;
;; If -1 specified the session cookies will be removed when browser closed.
;;

; session_cookies_max_age = 2592000


[log]

;;
;; Verbose logging into console.
;;

; verbose = no


[servers]

;; Stun and turn servers.
;;
;; Examples:
;; ice_servers = stun:stun.l.google.com:19305 stun:stun1.l.google.com:19305 stun:stun2.l.google.com:19305
;; ice_servers = turn:openrelay.metered.ca:444
;; ice_servers = turn:openrelay.metered.ca:443?transport=tcp
;; ice_servers = openrelayproject:openrelayproject@turn:openrelay.metered.ca:443?transport=tcp

;


;; RTC / WebRTC options.
[rtc]

;;
;; WebRTC RTP ports range.
;;

; ports = 49152..65535

;; Mediasoup worker options.
[worker]

;; Mediasoup worker log level.

; log_level = info


;; Mediasoup worker log tags.
;; Example:
;;  log_tags = info, ice, dtls, rtp, srtp, rtcp, rtx, bwe, score, simulcast, svc, sctp


;; Mediasoup worker command timeout in seconds.
;; Default 30 sec.

; command_timeout_sec = 30


;; Mediasoup router configuration
;;
;; Example:
;; router_options = {
;;     "codecs": [
;;       {
;;         "kind": "audio",
;;         "mimeType": "audio/opus",
;;         "clockRate": 48000,
;;         "channels": 2
;;       },
;;       {
;;         "kind": "video",
;;         "mimeType": "video/h264",
;;         "clockRate": 90000,
;;         "parameters": {
;;           "packetization-mode": 1,
;;           "profile-level-id": "42e01f",
;;           "level-asymmetry-allowed": 1,
;;           "x-google-start-bitrate": 1000
;;         }
;;       }
;;     ]
;;   }


;; Datagram Transport Layer Security options.
[dtls]

;;
;; Optional DTLS certs.
;;

; cert_file = {config_file_dir}/ssl-cert-snakeoil.pem
; cert_key_file = {config_file_dir}/ssl-cert-snakeoil.key


;; Meeting room options.
[room]

;;
;; Number of seconds an empty room will wait members before closing.
;;

; idle_timeout_sec = 60


;;
;; Maximum number of previous room sessions shown to user.
;;

; max_history_sessions = 16


;;
;; Maximum number of previous rooms shown to user.
;;

; max_history_rooms = 255


;; Websocket connection options.
[ws]

;;
;; Websocket connection idle timeout.
;;

; idle_timeout_sec = 60


;; Periodic housekeeper options.
[periodic_worker]

;;
;; Periodic worker checks timeout in seconds.
;;

; check_timeout_sec = 60


;;
;; Number of seconds when idle sessions will be removed.
;;

; expire_session_timeout_sec = 2592000


;;
;; Number of seconds when idle guest sessions will be removed.
;;

; expire_guest_session_timeout_sec = 86400


;; Database options.
[db]

;;
;; EJDB2 Database websocket connection access token.
;; access_token =


;;
;; EJDB2 Database websocket HTTP port.
;;

; access_port = 9191


;;
;; EJDB2 Database websocket listen host.
;;

; bind = localhost


;; Audio level observer.
[alo]

;;
;; Is audio level observer disabled.
;;

; disabled = no


;;
;; Maximum number of entries in the 'volumes‚Äù' event. Default 16.
;;

; max_entries = 16


;;
;; Minimum average volume (in dBvo from -127 to 0) for entries in the 'volumes' event. Default -55.
;;

; threshold = -55


;;
;; Interval in ms for checking audio volumes. Default 800.
;;

; interval_ms = 800


;; Active spreaker obbserver.
[aso]

;;
;; Is active speaker observer disabled.
;;

; disabled = no

;;
;; Interval in ms for checking active speaker state. Default 300.
;;

; interval_ms = 300


;; Scree recording options.
[recording]

;;
;; Turn on verbose logging.
;;

; verbose = no


;;
;; Maximum number of screen recording participants.
;;

; max_processes = 32


;; Let's Encrypt ACME protocol options.
[acme]

;; ACME service directory endpoint.

; endpoint = https://acme-v02.api.letsencrypt.org/directory


;; File uploading system options.
[uploads]

;;
;; Uploaded files dir. Default: [data_dir]/uploads
;;

; dir = {cwd}/uploads

;;
;; Maximum uploaded file size in megabytes.
;;

; max_size = 50


[whiteboard]

;;
;; Number of seconds when stored whiteboard data will be removed.
;; Default is 0 which means disable cleaning.
;;

; room_data_ttl_sec = 0

;;
;; If "true" whiteboard will be accessible (in readonly mode) for all users (not meeting participants)
;;

; public_available = no